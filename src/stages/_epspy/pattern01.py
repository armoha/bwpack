## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName
    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

class _ARRW:
     def __init__(self, obj, index):
         self.obj = obj
         self.index = index
     def __lshift__(self, r):
         self.obj[self.index] = r

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import stages.py_timeline as tL;
import stages.timeline as tL
# (Line 2) import bulletTools as bTool;
import _epspy.bulletTools as bTool
# (Line 4) function stagestart() {
@EUDFunc
def f_stagestart():
    # (Line 6) }
    # (Line 8) function stageproc() {
    pass

@EUDFunc
def f_stageproc():
    # (Line 10) foreach(timer : tL.Timeline(8 * 16)) {
    for timer in tL.Timeline(8 * 16):
        # (Line 11) if(timer % 8 == 0) {
        if EUDIf()(timer % 8 == 0):
            # (Line 12) var row;
            row = EUDVariable()
            # (Line 13) if(timer < 8 * 8) row = 1 + (timer / 8);
            if EUDIf()(timer < 8 * 8):
                row << (1 + (timer // 8))
                # (Line 14) else row = 17 - (timer / 8);
            if EUDElse()():
                row << (17 - (timer // 8))
                # (Line 15) bTool.shootU($P7, $U('Fast Missile'), 5000, row);
            EUDEndIf()
            # (Line 16) bTool.shootL($P8, $U('Fast Missile'), 5000, 10 - row);
            bTool.f_shootU(6, EncodeUnit('Fast Missile'), 5000, row)
            _t3 = bTool.f_shootL(7, EncodeUnit('Fast Missile'), 5000, 10 - row)
            # (Line 17) bTool.shootD($P7, $U('Fast Missile'), 5000, 10 - row);
            _t3
            _t4 = bTool.f_shootD(6, EncodeUnit('Fast Missile'), 5000, 10 - row)
            # (Line 18) bTool.shootR($P8, $U('Fast Missile'), 5000, row);
            _t4
            # (Line 19) }
            bTool.f_shootR(7, EncodeUnit('Fast Missile'), 5000, row)
            # (Line 20) }
        EUDEndIf()
        # (Line 21) }

    # (Line 23) const funcs = [EUDFuncPtr(0, 0)(f_stagestart), EUDFuncPtr(0, 0)(f_stageproc)];

_t5 = EUDArray(FlattenList([EUDFuncPtr(0, 0)(f_stagestart), EUDFuncPtr(0, 0)(f_stageproc)]))
funcs = _t5
