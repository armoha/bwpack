## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName
    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

class _ARRW:
     def __init__(self, obj, index):
         self.obj = obj
         self.index = index
     def __lshift__(self, r):
         self.obj[self.index] = r

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) import player.playerProc as pProc;
import player._epspy.playerProc as pProc
# (Line 2) import bulletBase as bBase;
import _epspy.bulletBase as bBase
# (Line 7) function mainUnitLoop() {
@EUDFunc
def f_mainUnitLoop():
    # (Line 8) foreach(ptr, epd : EUDLoopUnit()) {
    for ptr, epd in EUDLoopUnit():
        # (Line 10) const unitType = dwread_epd(epd + (0x64 / 4));
        unitType = f_dwread_epd(epd + (0x64 // 4))
        # (Line 11) if(unitType == $U("Avoider")) {
        if EUDIf()(unitType == EncodeUnit("Avoider")):
            # (Line 12) const playerID = dwbreak(dwread_epd(epd + (0x4C / 4)))[[2]];
            playerID = f_dwbreak(f_dwread_epd(epd + (0x4C // 4)))[2]
            # (Line 13) pProc.processPlayerCUnit(playerID, ptr, epd);
            # (Line 14) continue;
            pProc.f_processPlayerCUnit(playerID, ptr, epd)
            EUDContinue()
            # (Line 15) }
            # (Line 18) const w1, b0, b1 = dwbreak(dwread_epd(epd + (0x4C / 4)))[[1, 2, 3]];
        EUDEndIf()
        w1, b0, b1 = List2Assignable([_SRET(f_dwbreak(f_dwread_epd(epd + (0x4C // 4))), [1, 2, 3])])
        # (Line 19) const player, orderID = b0, b1;
        player, orderID = List2Assignable([b0, b1])
        # (Line 21) if(player >= $P7) {
        if EUDIf()(player >= 6):
            # (Line 23) if(orderID == 156 || orderID == 160 || orderID == 2 || orderID == 3) {
            if EUDIf()(EUDOr(orderID == 156, orderID == 160, orderID == 2, orderID == 3)):
                # (Line 24) dwwrite_epd(epd + (0x4C / 4), w1 * 65536 + b0);
                # (Line 25) }
                f_dwwrite_epd(epd + (0x4C // 4), w1 * 65536 + b0)
                # (Line 26) }
            EUDEndIf()
            # (Line 27) }
        EUDEndIf()
        # (Line 28) }
