## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName
    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

class _ARRW:
     def __init__(self, obj, index):
         self.obj = obj
         self.index = index
     def __lshift__(self, r):
         self.obj[self.index] = r

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) function playerRegen(player) {
@EUDFunc
def f_playerRegen(player):
    # (Line 2) return 864 + player * 64, 1376;
    EUDReturn(864 + player * 64, 1376)
    # (Line 3) }
    # (Line 5) function moveLocationPx(locID, x, y) {

@EUDFunc
def f_moveLocationPx(locID, x, y):
    # (Line 6) SetMemory(0x58DC60 + 20 * locID + 0x00, SetTo, x);
    # (Line 7) SetMemory(0x58DC60 + 20 * locID + 0x04, SetTo, y);
    # (Line 8) SetMemory(0x58DC60 + 20 * locID + 0x08, SetTo, x);
    # (Line 9) SetMemory(0x58DC60 + 20 * locID + 0x0C, SetTo, y);
    # (Line 10) }
    DoActions([
        SetMemory(0x58DC60 + 20 * locID + 0x00, SetTo, x),
        SetMemory(0x58DC60 + 20 * locID + 0x04, SetTo, y),
        SetMemory(0x58DC60 + 20 * locID + 0x08, SetTo, x),
        SetMemory(0x58DC60 + 20 * locID + 0x0C, SetTo, y)
    ])
