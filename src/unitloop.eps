import player.playerProc as pProc;
import bulletBase as bBase;
import py_unitloopHelper;

/**
 * eudloopunit은 엄청 비싸요. 얘보다 약간 빠른 eudloopunit2도 비쌉니다.
 * 그래서 모든 구조오프셋 처리는 이 함수 하나에 모아뒀습니다.
 */
function mainUnitLoop() {
    // Kill clipped bullets
    KillUnitAt(All, '(any unit)', 'uclip', Force2);
    KillUnitAt(All, '(any unit)', 'lclip', Force2);
    KillUnitAt(All, '(any unit)', 'dclip', Force2);
    KillUnitAt(All, '(any unit)', 'rclip', Force2);

    foreach(ptr, epd : unitloopHelper.EUDLoopUnit2()) {
        const w1, b0, b1 = dwbreak(dwread_epd(epd + (0x4C / 4)))[[1, 2, 3]];
        const player, orderID = b0, b1;
        
        if(player <= $P6) {
            // Player process
            const unitType = dwread_epd(epd + (0x64 / 4));
            if(unitType == $U("Avoider")) {
                pProc.processPlayerCUnit(player, ptr, epd);
                continue;
            }
        }
        else {
            // If halted -> kill it
            if(orderID == 156 || orderID == 160 || orderID == 2 || orderID == 3) {
                dwwrite_epd(epd + (0x4C / 4), w1 * 65536 + b0);
            }
        }
    }
}
